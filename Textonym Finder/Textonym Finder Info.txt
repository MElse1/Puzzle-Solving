The Task: Find all the textonyms of a given word using a bash script.

Background information: A Textonym is when two words can be made with the same T9 series of numbers. T9 is the letter/number conversion system that old cell phones had on their keyboards before touchscreens became ubiquitous. For example, golf, when converted to T9 is the number series 4653, hole's T9 conversion is also 4653, meaning those two words are textonyms.  I was tasked with making this solution in bash, so the product is a .sh file.

Lessons learned:  Pretty much the entirety of the bash commands used in this, I had a good pseudocode methodology of how to do this involving regex (minus one really misguided idea) and building a string from the inputs.  

if/elif in bash: As I mention in the comments on the script, I couldn’t get some inputs to work with some commands, I had initially intended on using if/elif to build the regex string to find the textonyms, but while I was trying to get the if comparison to work with regex I ended up stumbling onto a case comparison, and that worked like a charm so I went with that. I realize in doing this write up a week later the problem with if the if solution was just that I was assuming that bash treated strings in a for loop like PowerShell does, and went through each letter sequentially, which is not the case.  When I decided to try the case solution, it had a for loop, that had parameters that helped me to understand how bash treats strings.  

My really dumb idea: In the interest of transparency, I’ll put that my initial plan was REALLY dumb, I had intended on building every possible string with the regex from the T9 conversion, then comparing that to the dictionary file to find what strings were actual words,  again, this was really dumb, and thankfully, I couldn’t find a way to build strings with regex with bash.  While I was trying to figure it out, I realized that grep is good with regex, so I just used grep to search the wordlist using the regex string.

The importance of testing: I finished my script, tested a few words and it seemed to be working fine, so I sent off the solution to my MSSA instructor and felt really good about myself.  Later that day my wife was over talking to me, so I wanted to show her what I came up with because I was proud of it.  Of course, the first word she asked me to do was “Iron”, and my script gleefully spits out “The textonyms for Iron are:” and I realized that I didn’t put any kind of logic in the script to change the output for words with no textonyms in the dictionary, so I added logic to measure the number of grep results, and then change the output for 0 match situations, then I sent the fixed code to my instructor with the same story that’s here.
