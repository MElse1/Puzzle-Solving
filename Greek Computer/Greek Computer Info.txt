The Task: My Wife got my this Greecian Computer (https://www.amazon.com/True-Genius-Grecian-Computer/dp/B08469GT8K) for Valentine's Day.  It's a series of wooden circles that have numbers on them.  There are 5 circles that get progressively smaller as you move up the puzzle.  The goal of the puzzle is to arrange the circles so that each of the 12 columns of numbers all add up to 42.  I fiddled with this for a couple days after my wife got it for me, and I surmised that to solve it manually it would make sense to arrange it so that the six columns where the outer most series of numbers all added up to 42, then there would more than likely be a solution where you rotate the top 4 rings, and that solves for the other 6 columns (this description makes more sense if you look at the Amazon page).  Like I said, I messed with it for a few hours before I realized I was really just solving it through trial and error.  Therefore I decided that I should just write a python script to try every possible combination, and return the combination that solves the puzzle.

Background Information: this puzzle is modeled after the Antikythera Mechanism that was discovered off the Greek island of the same name in 1903.  It was described as the worlds first analogue computer.

First Thoughts:  My initial thinking is to assign each of the 4 rings of numbers as arrays, and then  run through 4 loops testing each possible position of the other 4 rings, evaluate the total of each column and then return the sequence of numbers that results in 12.  I figured I'd use for loops, and I would use the increment varaible in the for loop to cycle the different positions of the different rings.  I would reduce the increment value using a modulo function so that the array value being assigned never goes above 11.

Lessons Learned:



Test often: I spun my puzzle so I could read all the values on the bottom most ring, and assigned those values to 4 different arrays and then wrote the first for loop for changing the second ring from the bottom, I tested here and found that the values on the outermost ring were changing appropriately, and then figured I had the solution cracked and then wrote the for loops for the other 3 rings, then I wrote the evaluation mechanism and then ran my code.  My